

'------------------------------------------------
Function Test_Append()
   x = "."
   y = "test"
   Return UnitTest.AssertTrue(
      {
         y.Append(x) = "test.",
         Text.Append(y, x) = "test.",
         "." + "1" + 4 = 4.1,
         Text.Append(".", {"1", "4"}) = ".14",
         x.Append({"1", "4"}) = ".14"
      },
      "Text.Append"
   )
EndFunction


'------------------------------------------------
Function Test_IndexOf()
   a = "This is a test. Is not it?"
   
   Return UnitTest.AssertTrue(
      {
         Text.IndexOf(a, "This", 0, False) = 1,
         a.IndexOf("", 1, False) = 0,
         a.IndexOf("This", 6, False) = 0,
         a.IndexOf("E", 1, False) = 0,
         a.IndexOf("i", 1, False) = 3,
         a.IndexOf("i", 4, False) = 6,
         a.IndexOf("i", 100, True) = 24,
         a.IndexOf("Adam", 1, False) = 0,
         a.IndexOf("is", 1, False) = 3,
         a.IndexOf("is", a.Length, True) = 6,
         a.IndexOf("is", 5, True) = 3,
         a.IndexOf("Is", 1, False) = 17,
         a.IndexOf("Is", 100, True) = 17,
         a.IndexOf("Is", 16, True) = 0,
         a.IndexOf("Is", 16, False) = 17
      },
      "Text.IndexOf"
   )
EndFunction




'------------------------------------------------
Function Test_StringMult()
   a = {1, 2, 3}
   Return UnitTest.AssertTrue({
         "abc" * 2 = "abcabc",
         "200" * 2 = 400,
         2 * "abc" = "abcabc",
         2 * "200" = 400,
         "abc" * "2" = "abcabc",
         "200" * "2" = 400,
         "2" * "abc" = "abcabc",
         "2" * "200" = 400,
         "a" * "b" = "",
         2 * 200 = 400,
         #+1.3:0# * 2 = #+2.6:0#,
         a * 2 = ""
      },
      "StringMult")
EndFunction
