
Sub ChangeButtonsState(isEnabled)
   BtnFlower.Enabled = isEnabled
   BtnRadialSpiral.Enabled = isEnabled
   BtnSpiral.Enabled = isEnabled
   BtnSpiralRays.Enabled = isEnabled
   BtnSpring.Enabled = isEnabled
   BtnSpring2.Enabled = isEnabled
   BtnSpring3.Enabled = isEnabled
   BtnWavySpiral.Enabled = isEnabled
EndSub

' ------------------------------------------------
Sub BtnSpiral_OnClick()
   ChangeButtonsState(False)
   Turtle.Speed = 25
   GW.Clear()
   
   GW.AutoShow = False
   For i = 1 To 100 Step 3
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      Turtle.Move(2 * i)
      Turtle.Turn(60)
   Next
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnRadialSpiral_OnClick()
   ChangeButtonsState(False)
   Turtle.Speed = 50
   Turtle.UseAnimation = False
   GW.Clear()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   
   Turtle.PenUp()
   Turtle.MoveTo(w, h)
   Turtle.PenDown()
   
   angle = 0
   _step = 0.1
   size = 1
   
   GW.AutoShow = False
   While size < 200
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      x = w + size * Math.Cos(angle.Radians)
      y = h + size * Math.Sin(angle.Radians)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnSpring_OnClick()
   ChangeButtonsState(False)
   Turtle.Speed = 50
   Turtle.UseAnimation = False
   GW.Clear()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   
   Turtle.PenUp()
   Turtle.MoveTo(w, h)
   Turtle.PenDown()
   
   angle = 0
   _step = 0.1
   size = 1
   waveAmplitude = 5
   waveFrequency = 50
   
   GW.AutoShow = False
   While size < 250
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      a = Math.GetRadians(angle * waveFrequency)
      x = w + (size + waveAmplitude * Math.Sin(a)) * Math.Cos(angle.Radians)
      y = h + (size + waveAmplitude * Math.Sin(a)) * Math.Sin(angle.Radians)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnFlower_OnClick()
   ChangeButtonsState(False)
   Turtle.Speed = 50
   Turtle.UseAnimation = False
   GW.Clear()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   
   Turtle.PenUp()
   Turtle.MoveTo(w, h)
   Turtle.PenDown()
   
   angle = 0
   _step = 0.1
   size = 1
   waveAmplitude = 5
   waveFrequency = 10
   
   GW.AutoShow = False
   While size < 200
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      GW.PenColor = GW.GetRandomColor()
      a = Math.GetRadians(angle * waveFrequency)
      x = w + (size * (0.5 + angle.Cos) + waveAmplitude * a.Sin) * Math.Cos(angle.Radians)
      y = h + (size * (0.5 + angle.Cos) + waveAmplitude * a.Sin) * Math.Sin(angle.Radians)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
      Turtle.Move(5)
      Turtle.Turn(30)
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnSpring2_OnClick()
   ChangeButtonsState(False)
   Turtle.Speed = 50
   Turtle.UseAnimation = False
   GW.Clear()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   
   Turtle.PenUp()
   Turtle.MoveTo(w, h)
   Turtle.PenDown()
   angle = 0
   _step = 0.1
   size = 5
   waveAmplitude = 5
   waveFrequency = 50
   
   GW.AutoShow = False
   While size < 250
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      a = Math.GetRadians(angle * waveFrequency)
      x = w + (size + waveAmplitude * Math.Sin(a)) * Math.Cos(angle.Radians)
      y = h + (size + waveAmplitude * Math.Sin(a)) * Math.Sin(angle.Radians)
      Turtle.MoveTo(x, y)
      angle = angle + 1
      size = size + _step
      Turtle.Move(10)
      Turtle.Turn(5)
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnWavySpiral_OnClick()
   ChangeButtonsState(False)
   Turtle.Speed = 50
   Turtle.UseAnimation = False
   GW.Clear()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   GW.PenColor = Colors.Blue
   Turtle.PenUp()
   Turtle.MoveTo(w, h)
   Turtle.PenDown()
   
   angle = 0
   _step = 0.1
   size = 1
   thickness = 1
   maxThickness = 10
   thicknessStep = 0.1
   
   GW.AutoShow = False
   While size < 250
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      GraphicsWindow.PenWidth = thickness
      x = w + size * Math.Cos(angle.Radians)
      y = h + size * Math.Sin(angle.Radians)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
      thickness = maxThickness * Math.Abs(Math.Sin(Math.GetRadians(angle * 10)))
      
      If thickness < 1 Then
         thickness = 1
      EndIf
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnSpring3_OnClick()
   ChangeButtonsState(False)
   Turtle.Speed = 50
   Turtle.UseAnimation = False
   GW.Clear()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   GW.PenColor = Colors.Blue
   Turtle.PenUp()
   Turtle.MoveTo(w, h)
   Turtle.PenDown()
   
   angle = 0
   _step = 0.1
   size = 1
   thickness = 1
   maxThickness = 10
   thicknessStep = 0.1
   
   GW.AutoShow = False
   While size < 250
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      GraphicsWindow.PenWidth = thickness
      x = w + size * Math.Cos(angle.Radians)
      y = h + size * Math.Sin(angle.Radians)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
      thickness = maxThickness * Math.Abs(Math.Sin(Math.GetRadians(angle * 10)))
      
      If thickness < 1 Then
         thickness = 1
      EndIf
      
      Turtle.Move(10)
      Turtle.Turn(5)
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnSpiralRays_OnClick()
   ChangeButtonsState(False)
   GW.Clear()
   
   GW.AutoShow = False
   For a = 0 To 1440 + 270 Step 3
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      GW.PenWidth = 0.8 + Math.NaturalLog(a) / 5
      GW.PenColor = Colors.Blue
      radA = a.Radians
      w = a / 240 * Math.Cos(radA * 5.5) * 5
      r = 30 + 8 * a / 45
      GW.DrawLine(
         420 + (r + w) * Math.Cos(radA),
         Math.Sin(radA) * (r + w) + 320,
         420 + (r - w) * Math.Cos(radA),
         Math.Sin(radA) * (r - w) + 320
      )
   Next
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub
